name: .NET

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  repository_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet-version: ["5.0.x"]
    steps:
      - uses: actions/checkout@v2
      - name: Setup .NET Core SDK ${{ matrix.dotnet-version }}
        uses: actions/setup-dotnet@v1.7.2
        with:
          dotnet-version: ${{ matrix.dotnet-version }}
  deploy:
    runs-on: ubuntu-latest
    needs: [test]
    strategy:
      matrix:
        dotnet-version: ["5.0"]
    steps:
      - uses: actions/checkout@v2
      - name: Trigger my downstream workflow
        run: |
          curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.REPO_ACCESS_TOKEN}}" -H "Accept:application/vnd.github" -H "Content-Type:application/json" https://api.github.com/repos/ErdoganAlper/ClassLibrary/dotnet.yml/dispatches --data '{"ref": "main" }'
      - name: Download ClassLibrary1
        uses: GuillaumeFalourd/clone-github-repo-action@v2
        with:
          owner: ErdoganAlper
          repository: ClassLibrary1
      - name: Copy ClassLibrary1 to Project
        run: cp -r ClassLibrary1 ./MainApplication
      - name: Build project
        run: dotnet publish ./MainApplication -c Release --output outputDir
      - name: Generate deployment package
        run: (cd outputDir && zip -r ./../deploy.zip ./)
      - name: Get timestamp
        uses: gerred/actions/current-time@master
        id: current-time
      - name: post
        run: |
            curl -XPOST -u "${{ secrets.PAT_USERNAME}}:${{secrets.REPO_ACCESS_TOKEN}}" -H "Accept: application/vnd.github.everest-preview+json" -H "Content-Type: application/json" https://api.github.com/repos/ErdoganAlper/ClassLibrary1/dispatches --data '{"event_type": "build_application"}'
      - name: Run string replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: "-"
          flags: "g"
      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: MainApplication
          environment_name: MainApplication-env
          version_label: "${{ steps.current-time.outputs.time }}"
          region: eu-west-1
          deployment_package: deploy.zip
          wait_for_deployment: true
